@using ScoreUI.Models.Entities

@if (!string.IsNullOrWhiteSpace(Match.DisplayText))
{
	<MudPaper Class="my-3 pa-3 gray lighten-4">
		<MudText Typo="Typo.h6">
			@Match.DisplayText
		</MudText>
	</MudPaper>
}

<MudPaper Class="my-3 pa-3">
	<MudGrid>
		<MudItem xs="12" md="5" xl="4">
			<MatchParticipantDisplay Tournament="Tournament" Id="Match.OneId" />
		</MudItem>

		<MudItem xs="12" md="2" xl="4">
			&nbsp;
		</MudItem>

		<MudItem xs="12" md="5" xl="4">
			<MatchParticipantDisplay Tournament="Tournament" Id="Match.TwoId" RightToLeft />
		</MudItem>
	</MudGrid>
</MudPaper>

<MudPaper Class="my-3 pa-3">
	@switch (Match)
	{
		case SimpleMatch sm:
			<SimpleMatchScoringPanel Match="sm" />
			break;
			
		case DualPointsMatch dp when _matchSettings is DualPointsMatchSettings dps:
			<DualPointsMatchScoringPanel Match="dp" Settings="dps" />
			break;
			
		case MultiDuelMatch md when _matchSettings is MultiDuelMatchSettings mds:
			<MultiDuelMatchScoringPanel Match="md" Settings="mds" />
			break;
	}
</MudPaper>

@if (_matchSettings?.IsTimed == true)
{
	<MudPaper Class="my-3 pa-3 gray lighten-4">
		<MatchTimerPanel Match="Match" Settings="_matchSettings" />
	</MudPaper>
}

@if (!string.IsNullOrWhiteSpace(Match.Comment))
{
	<MudPaper Class="my-3 pa-3 gray lighten-4">
		<MudText Typo="Typo.caption">
			@Match.Comment
		</MudText>
	</MudPaper>
}

@code {

	[Parameter, EditorRequired]
	public required Tournament Tournament { get; set; }

	[Parameter, EditorRequired]
	public required Match Match { get; set; }

	MatchSettings? _matchSettings;

	protected override void OnParametersSet()
	{
		_matchSettings = Match.GetSettings(Tournament);
	}

}