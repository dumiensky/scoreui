@using ScoreUI.Models.Entities
@using ScoreUI.Components.Participants
@using ScoreUI.Models.Consts
@using ScoreUI.Models.Enums

@inject NavigationManager _nav

<MudPaper Class="gray lighten-4">
	@if (!string.IsNullOrWhiteSpace(Match.DisplayText))
	{
		<div class="px-3 py-2 gray lighten-3">
			<MudText Typo="Typo.h6">
				@Match.DisplayText
			</MudText>
		</div>
	}
	<div class="pa-3">
		<MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
			<div style="width: 100%">
				<div class="pa-3" style="border-bottom: 1px solid black">
					<MudStack Row>
						<MatchWinnerIndicator Match="Match" ParticipantId="Match.OneId" />
						<ParticipantIdDisplay Tournament="Tournament" Id="Match.OneId" />
					</MudStack>
				</div>
				<div class="pa-3">
					<MudStack Row>
						<MatchWinnerIndicator Match="Match" ParticipantId="Match.TwoId" />
						<ParticipantIdDisplay Tournament="Tournament" Id="Match.TwoId" />
					</MudStack>
				</div>
			</div>
			<MudStack Justify="Justify.SpaceBetween">
				<MudButton StartIcon="@Icons.Material.Filled.ChevronRight" Variant="Variant.Filled" Color="Color.Primary" OnClick='Judge'>
					Oceniaj
				</MudButton>
				<MudButton StartIcon="@Icons.Material.Filled.DeleteOutline" Variant="Variant.Filled" Color="Color.Error" Disabled="Match.ScoringDisabled" OnClick="() => OnDelete.InvokeAsync(Match)">
					Usu≈Ñ
				</MudButton>
			</MudStack>
		</MudStack>
	</div>
	@if (!string.IsNullOrWhiteSpace(Match.Comment))
	{
		<div class="px-3 py-1 gray lighten-3">
			<MudText Typo="Typo.caption">
				@Match.Comment
			</MudText>
		</div>
	}
</MudPaper>

@code {
	[Parameter, EditorRequired]
	public required Tournament Tournament { get; set; }
	
	[Parameter, EditorRequired]
	public required Match Match { get; set; }
	
	[Parameter, EditorRequired]
	public EventCallback<Match> OnDelete { get; set; }

	void Judge()
	{
		_nav.NavigateTo(Urls.Tournaments.GetJudge(Tournament.Id, Match.Id) + $"?token={Match.GetMatchToken(Tournament.Settings.Key)}");
	}
}